token 1   :CONST   const at line 1
token 2   :INT     int   at line 1
token 3   :ID      con_int_1 at line 1
token 4   :EQU     =     at line 1
token 5   :NUM     1     at line 1
token 6   :COMMA   ,     at line 1
token 7   :ID      con_int_2 at line 1
token 8   :EQU     =     at line 1
token 9   :NUM     2     at line 1
token 10  :SEMI    ;     at line 1
token 11  :CONST   const at line 2
token 12  :CHAR    char  at line 2
token 13  :ID      con_char_1 at line 2
token 14  :EQU     =     at line 2
token 15  :SIGCHAR 'a' at line 2
token 16  :COMMA   ,     at line 2
token 17  :ID      con_char_2 at line 2
token 18  :EQU     =     at line 2
token 19  :SIGCHAR 'b' at line 2
token 20  :SEMI    ;     at line 2
token 21  :INT     int   at line 4
token 22  :ID      var_int_1 at line 4
token 23  :COMMA   ,     at line 4
token 24  :ID      var_int_2 at line 4
token 25  :COMMA   ,     at line 4
token 26  :ID      var_int_array_1 at line 4
token 27  :LBRK    [     at line 4
token 28  :NUM     101   at line 4
token 29  :RBRK    ]     at line 4
token 30  :SEMI    ;     at line 4
token 31  :INT     int   at line 5
token 32  :ID      var_int_array_2 at line 5
token 33  :LBRK    [     at line 5
token 34  :NUM     101   at line 5
token 35  :RBRK    ]     at line 5
token 36  :SEMI    ;     at line 5
token 37  :CHAR    char  at line 6
token 38  :ID      var_char_1 at line 6
token 39  :COMMA   ,     at line 6
token 40  :ID      var_char_array at line 6
token 41  :LBRK    [     at line 6
token 42  :NUM     101   at line 6
token 43  :RBRK    ]     at line 6
token 44  :SEMI    ;     at line 6
token 45  :CHAR    char  at line 8
token 46  :ID      test_if at line 8
token 47  :LPAR    (     at line 8
token 48  :INT     int   at line 8
token 49  :ID      a     at line 8
token 50  :COMMA   ,     at line 8
token 51  :INT     int   at line 8
token 52  :ID      b     at line 8
token 53  :RPAR    )     at line 8
token 54  :LBRA    {     at line 8
token 55  :IF      if    at line 9
token 56  :LPAR    (     at line 9
token 57  :ID      a     at line 9
token 58  :GEQ     >=    at line 9
token 59  :ID      b     at line 9
token 60  :RPAR    )     at line 9
token 61  :RETURN  return at line 10
token 62  :LPAR    (     at line 10
token 63  :SIGCHAR 'a' at line 10
token 64  :RPAR    )     at line 10
token 65  :SEMI    ;     at line 10
token 66  :ELSE    else  at line 11
token 67  :RETURN  return at line 12
token 68  :LPAR    (     at line 12
token 69  :SIGCHAR 'b' at line 12
token 70  :RPAR    )     at line 12
token 71  :SEMI    ;     at line 12
token 72  :RBRA    }     at line 13
token 73  :INT     int   at line 15
token 74  :ID      test_factorial at line 15
token 75  :LPAR    (     at line 15
token 76  :INT     int   at line 15
token 77  :ID      n     at line 15
token 78  :RPAR    )     at line 15
token 79  :LBRA    {     at line 15
token 80  :IF      if    at line 16
token 81  :LPAR    (     at line 16
token 82  :ID      n     at line 16
token 83  :EQEQ    ==    at line 16
token 84  :NUM     0     at line 16
token 85  :RPAR    )     at line 16
token 86  :RETURN  return at line 17
token 87  :LPAR    (     at line 17
token 88  :NUM     1     at line 17
token 89  :RPAR    )     at line 17
token 90  :SEMI    ;     at line 17
token 91  :ELSE    else  at line 18
token 92  :RETURN  return at line 19
token 93  :LPAR    (     at line 19
token 94  :ID      n     at line 19
token 95  :MULT    *     at line 19
token 96  :ID      test_factorial at line 19
token 97  :LPAR    (     at line 19
token 98  :ID      n     at line 19
token 99  :MINUS   -     at line 19
token 100 :NUM     1     at line 19
token 101 :RPAR    )     at line 19
token 102 :RPAR    )     at line 19
token 103 :SEMI    ;     at line 19
token 104 :RBRA    }     at line 20
token 105 :INT     int   at line 24
token 106 :ID      test_while at line 24
token 107 :LBRA    {     at line 24
token 108 :INT     int   at line 25
token 109 :ID      var_int_1 at line 25
token 110 :SEMI    ;     at line 25
token 111 :ID      var_int_1 at line 26
token 112 :EQU     =     at line 26
token 113 :NUM     3     at line 26
token 114 :SEMI    ;     at line 26
token 115 :DO      do    at line 27
token 116 :LBRA    {     at line 27
token 117 :ID      var_int_1 at line 28
token 118 :EQU     =     at line 28
token 119 :ID      var_int_1 at line 28
token 120 :MINUS   -     at line 28
token 121 :NUM     1     at line 28
token 122 :SEMI    ;     at line 28
token 123 :PRINTF  printf at line 29
token 124 :LPAR    (     at line 29
token 125 :ID      var_int_1 at line 29
token 126 :RPAR    )     at line 29
token 127 :SEMI    ;     at line 29
token 128 :RBRA    }     at line 30
token 129 :WHILE   while at line 30
token 130 :LPAR    (     at line 30
token 131 :ID      var_int_1 at line 30
token 132 :RPAR    )     at line 30
token 133 :RETURN  return at line 31
token 134 :LPAR    (     at line 31
token 135 :NUM     666   at line 31
token 136 :RPAR    )     at line 31
token 137 :SEMI    ;     at line 31
token 138 :RBRA    }     at line 32
token 139 :VOID    void  at line 35
token 140 :ID      test_switch_char at line 35
token 141 :LPAR    (     at line 35
token 142 :CHAR    char  at line 35
token 143 :ID      c     at line 35
token 144 :RPAR    )     at line 35
token 145 :LBRA    {     at line 35
token 146 :SWITCH  switch at line 36
token 147 :LPAR    (     at line 36
token 148 :ID      c     at line 36
token 149 :RPAR    )     at line 36
token 150 :LBRA    {     at line 36
token 151 :CASE    case  at line 37
token 152 :SIGCHAR 'a' at line 37
token 153 :COLON   :     at line 37
token 154 :LBRA    {     at line 37
token 155 :PRINTF  printf at line 38
token 156 :LPAR    (     at line 38
token 157 :STRING  "apple" at line 38
token 158 :RPAR    )     at line 38
token 159 :SEMI    ;     at line 38
token 160 :PRINTF  printf at line 39
token 161 :LPAR    (     at line 39
token 162 :STRING  "ali" at line 39
token 163 :RPAR    )     at line 39
token 164 :SEMI    ;     at line 39
token 165 :RBRA    }     at line 40
token 166 :CASE    case  at line 41
token 167 :SIGCHAR 'b' at line 41
token 168 :COLON   :     at line 41
token 169 :LBRA    {     at line 41
token 170 :PRINTF  printf at line 42
token 171 :LPAR    (     at line 42
token 172 :STRING  "boy" at line 42
token 173 :RPAR    )     at line 42
token 174 :SEMI    ;     at line 42
token 175 :RBRA    }     at line 43
token 176 :DEFAULT default at line 44
token 177 :COLON   :     at line 44
token 178 :LBRA    {     at line 44
token 179 :PRINTF  printf at line 45
token 180 :LPAR    (     at line 45
token 181 :STRING  "cat" at line 45
token 182 :RPAR    )     at line 45
token 183 :SEMI    ;     at line 45
token 184 :RBRA    }     at line 46
token 185 :RBRA    }     at line 47
token 186 :RBRA    }     at line 48
token 187 :VOID    void  at line 51
token 188 :ID      test_relation at line 51
token 189 :LPAR    (     at line 51
token 190 :INT     int   at line 51
token 191 :ID      n     at line 51
token 192 :RPAR    )     at line 51
token 193 :LBRA    {     at line 51
token 194 :IF      if    at line 52
token 195 :LPAR    (     at line 52
token 196 :ID      n     at line 52
token 197 :LSS     <     at line 52
token 198 :NUM     3     at line 52
token 199 :RPAR    )     at line 52
token 200 :PRINTF  printf at line 53
token 201 :LPAR    (     at line 53
token 202 :STRING  "<" at line 53
token 203 :RPAR    )     at line 53
token 204 :SEMI    ;     at line 53
token 205 :ELSE    else  at line 54
token 206 :SEMI    ;     at line 54
token 207 :IF      if    at line 56
token 208 :LPAR    (     at line 56
token 209 :ID      n     at line 56
token 210 :LEQ     <=    at line 56
token 211 :NUM     4     at line 56
token 212 :RPAR    )     at line 56
token 213 :PRINTF  printf at line 57
token 214 :LPAR    (     at line 57
token 215 :STRING  "<=" at line 57
token 216 :RPAR    )     at line 57
token 217 :SEMI    ;     at line 57
token 218 :ELSE    else  at line 58
token 219 :SEMI    ;     at line 58
token 220 :IF      if    at line 60
token 221 :LPAR    (     at line 60
token 222 :ID      n     at line 60
token 223 :GTR     >     at line 60
token 224 :NUM     5     at line 60
token 225 :RPAR    )     at line 60
token 226 :PRINTF  printf at line 61
token 227 :LPAR    (     at line 61
token 228 :STRING  ">" at line 61
token 229 :RPAR    )     at line 61
token 230 :SEMI    ;     at line 61
token 231 :ELSE    else  at line 62
token 232 :SEMI    ;     at line 62
token 233 :IF      if    at line 64
token 234 :LPAR    (     at line 64
token 235 :ID      n     at line 64
token 236 :GEQ     >=    at line 64
token 237 :NUM     6     at line 64
token 238 :RPAR    )     at line 64
token 239 :PRINTF  printf at line 65
token 240 :LPAR    (     at line 65
token 241 :STRING  ">=" at line 65
token 242 :RPAR    )     at line 65
token 243 :SEMI    ;     at line 65
token 244 :ELSE    else  at line 66
token 245 :SEMI    ;     at line 66
token 246 :IF      if    at line 68
token 247 :LPAR    (     at line 68
token 248 :ID      n     at line 68
token 249 :NEQ     !=    at line 68
token 250 :NUM     7     at line 68
token 251 :RPAR    )     at line 68
token 252 :PRINTF  printf at line 69
token 253 :LPAR    (     at line 69
token 254 :STRING  "!=" at line 69
token 255 :RPAR    )     at line 69
token 256 :SEMI    ;     at line 69
token 257 :ELSE    else  at line 70
token 258 :SEMI    ;     at line 70
token 259 :IF      if    at line 72
token 260 :LPAR    (     at line 72
token 261 :ID      n     at line 72
token 262 :EQEQ    ==    at line 72
token 263 :NUM     8     at line 72
token 264 :RPAR    )     at line 72
token 265 :PRINTF  printf at line 73
token 266 :LPAR    (     at line 73
token 267 :STRING  "==" at line 73
token 268 :RPAR    )     at line 73
token 269 :SEMI    ;     at line 73
token 270 :ELSE    else  at line 74
token 271 :SEMI    ;     at line 74
token 272 :RBRA    }     at line 75
token 273 :INT     int   at line 78
token 274 :ID      test_para at line 78
token 275 :LPAR    (     at line 78
token 276 :INT     int   at line 78
token 277 :ID      a     at line 78
token 278 :COMMA   ,     at line 78
token 279 :INT     int   at line 78
token 280 :ID      b     at line 78
token 281 :COMMA   ,     at line 78
token 282 :INT     int   at line 78
token 283 :ID      c     at line 78
token 284 :COMMA   ,     at line 78
token 285 :INT     int   at line 78
token 286 :ID      con_int_1 at line 78
token 287 :COMMA   ,     at line 78
token 288 :INT     int   at line 78
token 289 :ID      con_int_2 at line 78
token 290 :RPAR    )     at line 78
token 291 :LBRA    {     at line 78
token 292 :RETURN  return at line 79
token 293 :LPAR    (     at line 79
token 294 :ID      a     at line 79
token 295 :PLUS    +     at line 79
token 296 :ID      b     at line 79
token 297 :PLUS    +     at line 79
token 298 :ID      c     at line 79
token 299 :PLUS    +     at line 79
token 300 :ID      con_int_1 at line 79
token 301 :PLUS    +     at line 79
token 302 :ID      con_int_2 at line 79
token 303 :RPAR    )     at line 79
token 304 :SEMI    ;     at line 79
token 305 :RBRA    }     at line 80
token 306 :VOID    void  at line 82
token 307 :ID      test_expression at line 82
token 308 :LBRA    {     at line 82
token 309 :ID      var_int_array_1 at line 83
token 310 :LBRK    [     at line 83
token 311 :NUM     1     at line 83
token 312 :RBRK    ]     at line 83
token 313 :EQU     =     at line 83
token 314 :ID      con_int_2 at line 83
token 315 :DIV     /     at line 83
token 316 :NUM     1     at line 83
token 317 :PLUS    +     at line 83
token 318 :NUM     1     at line 83
token 319 :PLUS    +     at line 83
token 320 :ID      test_para at line 83
token 321 :LPAR    (     at line 83
token 322 :NUM     1     at line 83
token 323 :COMMA   ,     at line 83
token 324 :NUM     2     at line 83
token 325 :COMMA   ,     at line 83
token 326 :NUM     3     at line 83
token 327 :COMMA   ,     at line 83
token 328 :NUM     4     at line 83
token 329 :COMMA   ,     at line 83
token 330 :NUM     5     at line 83
token 331 :RPAR    )     at line 83
token 332 :SEMI    ;     at line 83
token 333 :PRINTF  printf at line 84
token 334 :LPAR    (     at line 84
token 335 :STRING  "The result is " at line 84
token 336 :COMMA   ,     at line 84
token 337 :MINUS   -     at line 84
token 338 :ID      con_int_1 at line 84
token 339 :MINUS   -     at line 84
token 340 :ID      var_int_array_1 at line 84
token 341 :LBRK    [     at line 84
token 342 :NUM     1     at line 84
token 343 :RBRK    ]     at line 84
token 344 :PLUS    +     at line 84
token 345 :PLUS    +     at line 84
token 346 :NUM     005   at line 84
token 347 :PLUS    +     at line 84
token 348 :SIGCHAR 'a' at line 84
token 349 :PLUS    +     at line 84
token 350 :ID      test_factorial at line 84
token 351 :LPAR    (     at line 84
token 352 :NUM     3     at line 84
token 353 :RPAR    )     at line 84
token 354 :PLUS    +     at line 84
token 355 :MINUS   -     at line 84
token 356 :NUM     1     at line 84
token 357 :MULT    *     at line 84
token 358 :LPAR    (     at line 84
token 359 :NUM     2     at line 84
token 360 :PLUS    +     at line 84
token 361 :NUM     1     at line 84
token 362 :RPAR    )     at line 84
token 363 :RPAR    )     at line 84
token 364 :SEMI    ;     at line 84
token 365 :ID      var_int_2 at line 85
token 366 :EQU     =     at line 85
token 367 :ID      con_char_1 at line 85
token 368 :PLUS    +     at line 85
token 369 :NUM     1     at line 85
token 370 :SEMI    ;     at line 85
token 371 :PRINTF  printf at line 86
token 372 :LPAR    (     at line 86
token 373 :ID      var_int_2 at line 86
token 374 :RPAR    )     at line 86
token 375 :SEMI    ;     at line 86
token 376 :RBRA    }     at line 87
token 377 :VOID    void  at line 90
token 378 :MAIN    main  at line 90
token 379 :LPAR    (     at line 90
token 380 :RPAR    )     at line 90
token 381 :LBRA    {     at line 90
token 382 :CONST   const at line 91
token 383 :INT     int   at line 91
token 384 :ID      con_int_3 at line 91
token 385 :EQU     =     at line 91
token 386 :NUM     003   at line 91
token 387 :COMMA   ,     at line 91
token 388 :ID      con_int_4 at line 91
token 389 :EQU     =     at line 91
token 390 :PLUS    +     at line 91
token 391 :NUM     44    at line 91
token 392 :COMMA   ,     at line 91
token 393 :ID      con_int_5 at line 91
token 394 :EQU     =     at line 91
token 395 :MINUS   -     at line 91
token 396 :NUM     555   at line 91
token 397 :SEMI    ;     at line 91
token 398 :INT     int   at line 92
token 399 :ID      var_int_res at line 92
token 400 :SEMI    ;     at line 92
token 401 :CHAR    char  at line 93
token 402 :ID      var_char_res at line 93
token 403 :SEMI    ;     at line 93
token 404 :INT     int   at line 94
token 405 :ID      var_int_3 at line 94
token 406 :COMMA   ,     at line 94
token 407 :ID      var_int_4 at line 94
token 408 :SEMI    ;     at line 94
token 409 :INT     int   at line 95
token 410 :ID      op    at line 95
token 411 :SEMI    ;     at line 95
token 412 :ID      var_int_1 at line 97
token 413 :EQU     =     at line 97
token 414 :NUM     04    at line 97
token 415 :SEMI    ;     at line 97
token 416 :SCANF   scan  at line 99
token 417 :LPAR    (     at line 99
token 418 :ID      op    at line 99
token 419 :RPAR    )     at line 99
token 420 :SEMI    ;     at line 99
token 421 :SWITCH  switch at line 100
token 422 :LPAR    (     at line 100
token 423 :ID      op    at line 100
token 424 :RPAR    )     at line 100
token 425 :LBRA    {     at line 100
token 426 :CASE    case  at line 101
token 427 :NUM     1     at line 101
token 428 :COLON   :     at line 101
token 429 :LBRA    {     at line 101
token 430 :PRINTF  printf at line 102
token 431 :LPAR    (     at line 102
token 432 :STRING  "test_if\\n" at line 102
token 433 :RPAR    )     at line 102
token 434 :SEMI    ;     at line 102
token 435 :ID      var_char_res at line 103
token 436 :EQU     =     at line 103
token 437 :ID      test_if at line 103
token 438 :LPAR    (     at line 103
token 439 :ID      con_int_5 at line 103
token 440 :COMMA   ,     at line 103
token 441 :ID      con_int_3 at line 103
token 442 :RPAR    )     at line 103
token 443 :SEMI    ;     at line 103
token 444 :PRINTF  printf at line 104
token 445 :LPAR    (     at line 104
token 446 :ID      var_char_res at line 104
token 447 :RPAR    )     at line 104
token 448 :SEMI    ;     at line 104
token 449 :ID      var_char_res at line 105
token 450 :EQU     =     at line 105
token 451 :ID      test_if at line 105
token 452 :LPAR    (     at line 105
token 453 :ID      con_int_4 at line 105
token 454 :COMMA   ,     at line 105
token 455 :ID      con_int_3 at line 105
token 456 :RPAR    )     at line 105
token 457 :SEMI    ;     at line 105
token 458 :PRINTF  printf at line 106
token 459 :LPAR    (     at line 106
token 460 :ID      var_char_res at line 106
token 461 :RPAR    )     at line 106
token 462 :SEMI    ;     at line 106
token 463 :PRINTF  printf at line 108
token 464 :LPAR    (     at line 108
token 465 :STRING  "test_factorial" at line 108
token 466 :RPAR    )     at line 108
token 467 :SEMI    ;     at line 108
token 468 :ID      var_int_res at line 109
token 469 :EQU     =     at line 109
token 470 :ID      test_factorial at line 109
token 471 :LPAR    (     at line 109
token 472 :ID      var_int_1 at line 109
token 473 :RPAR    )     at line 109
token 474 :SEMI    ;     at line 109
token 475 :PRINTF  printf at line 110
token 476 :LPAR    (     at line 110
token 477 :ID      var_int_res at line 110
token 478 :RPAR    )     at line 110
token 479 :SEMI    ;     at line 110
token 480 :RBRA    }     at line 111
token 481 :CASE    case  at line 112
token 482 :NUM     2     at line 112
token 483 :COLON   :     at line 112
token 484 :LBRA    {     at line 112
token 485 :PRINTF  printf at line 113
token 486 :LPAR    (     at line 113
token 487 :STRING  "test_while" at line 113
token 488 :RPAR    )     at line 113
token 489 :SEMI    ;     at line 113
token 490 :ID      var_int_res at line 114
token 491 :EQU     =     at line 114
token 492 :ID      test_while at line 114
token 493 :SEMI    ;     at line 114
token 494 :PRINTF  printf at line 115
token 495 :LPAR    (     at line 115
token 496 :ID      var_int_res at line 115
token 497 :RPAR    )     at line 115
token 498 :SEMI    ;     at line 115
token 499 :PRINTF  printf at line 117
token 500 :LPAR    (     at line 117
token 501 :STRING  "test_switch_char" at line 117
token 502 :RPAR    )     at line 117
token 503 :SEMI    ;     at line 117
token 504 :ID      test_switch_char at line 118
token 505 :LPAR    (     at line 118
token 506 :ID      con_char_1 at line 118
token 507 :RPAR    )     at line 118
token 508 :SEMI    ;     at line 118
token 509 :ID      test_switch_char at line 119
token 510 :LPAR    (     at line 119
token 511 :ID      con_char_2 at line 119
token 512 :RPAR    )     at line 119
token 513 :SEMI    ;     at line 119
token 514 :ID      test_switch_char at line 120
token 515 :LPAR    (     at line 120
token 516 :SIGCHAR 'c' at line 120
token 517 :RPAR    )     at line 120
token 518 :SEMI    ;     at line 120
token 519 :RBRA    }     at line 121
token 520 :CASE    case  at line 122
token 521 :NUM     3     at line 122
token 522 :COLON   :     at line 122
token 523 :LBRA    {     at line 122
token 524 :PRINTF  printf at line 123
token 525 :LPAR    (     at line 123
token 526 :STRING  "test_relation" at line 123
token 527 :RPAR    )     at line 123
token 528 :SEMI    ;     at line 123
token 529 :SCANF   scan  at line 124
token 530 :LPAR    (     at line 124
token 531 :ID      var_int_1 at line 124
token 532 :RPAR    )     at line 124
token 533 :SEMI    ;     at line 124
token 534 :ID      test_relation at line 125
token 535 :LPAR    (     at line 125
token 536 :ID      con_int_1 at line 125
token 537 :RPAR    )     at line 125
token 538 :SEMI    ;     at line 125
token 539 :SCANF   scan  at line 126
token 540 :LPAR    (     at line 126
token 541 :ID      var_int_1 at line 126
token 542 :RPAR    )     at line 126
token 543 :SEMI    ;     at line 126
token 544 :ID      test_relation at line 127
token 545 :LPAR    (     at line 127
token 546 :NUM     8     at line 127
token 547 :RPAR    )     at line 127
token 548 :SEMI    ;     at line 127
token 549 :PRINTF  printf at line 129
token 550 :LPAR    (     at line 129
token 551 :STRING  "test_expression" at line 129
token 552 :RPAR    )     at line 129
token 553 :SEMI    ;     at line 129
token 554 :ID      test_expression at line 130
token 555 :SEMI    ;     at line 130
token 556 :RBRA    }     at line 131
token 557 :DEFAULT default at line 132
token 558 :COLON   :     at line 132
token 559 :LBRA    {     at line 132
token 560 :PRINTF  printf at line 133
token 561 :LPAR    (     at line 133
token 562 :STRING  "Please input 1~6" at line 133
token 563 :RPAR    )     at line 133
token 564 :SEMI    ;     at line 133
token 565 :RBRA    }     at line 134
token 566 :RBRA    }     at line 135
token 567 :RETURN  return at line 136
token 568 :SEMI    ;     at line 136
token 569 :RBRA    }     at line 137
