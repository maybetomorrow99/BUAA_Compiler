token 1   :CONST   const at line 1
token 2   :INT     int   at line 1
token 3   :ID      con_int_1 at line 1
token 4   :EQU     =     at line 1
token 5   :NUM     1     at line 1
token 6   :COMMA   ,     at line 1
token 7   :ID      con_int_2 at line 1
token 8   :EQU     =     at line 1
token 9   :NUM     2     at line 1
token 10  :SEMI    ;     at line 1
token 11  :CONST   const at line 2
token 12  :CHAR    char  at line 2
token 13  :ID      con_char_1 at line 2
token 14  :EQU     =     at line 2
token 15  :SIGCHAR 'a' at line 2
token 16  :COMMA   ,     at line 2
token 17  :ID      con_char_2 at line 2
token 18  :EQU     =     at line 2
token 19  :SIGCHAR 'b' at line 2
token 20  :SEMI    ;     at line 2
token 21  :INT     int   at line 4
token 22  :ID      var_int_1 at line 4
token 23  :COMMA   ,     at line 4
token 24  :ID      var_int_2 at line 4
token 25  :COMMA   ,     at line 4
token 26  :ID      var_int_array_1 at line 4
token 27  :LBRK    [     at line 4
token 28  :NUM     101   at line 4
token 29  :RBRK    ]     at line 4
token 30  :SEMI    ;     at line 4
token 31  :INT     int   at line 5
token 32  :ID      var_int_array_2 at line 5
token 33  :LBRK    [     at line 5
token 34  :NUM     101   at line 5
token 35  :RBRK    ]     at line 5
token 36  :SEMI    ;     at line 5
token 37  :CHAR    char  at line 6
token 38  :ID      var_char_1 at line 6
token 39  :COMMA   ,     at line 6
token 40  :ID      var_char_array at line 6
token 41  :LBRK    [     at line 6
token 42  :NUM     101   at line 6
token 43  :RBRK    ]     at line 6
token 44  :SEMI    ;     at line 6
token 45  :INT     int   at line 8
token 46  :ID      _abcdefghigklmnopqrstuvwxyz at line 8
token 47  :SEMI    ;     at line 8
token 48  :INT     int   at line 9
token 49  :ID      abcdefghijklmnopqrstuvwxyz1234567890 at line 9
token 50  :SEMI    ;     at line 9
token 51  :CHAR    char  at line 11
token 52  :ID      test_if at line 11
token 53  :LPAR    (     at line 11
token 54  :INT     int   at line 11
token 55  :ID      a     at line 11
token 56  :COMMA   ,     at line 11
token 57  :INT     int   at line 11
token 58  :ID      b     at line 11
token 59  :RPAR    )     at line 11
token 60  :LBRA    {     at line 11
token 61  :IF      if    at line 12
token 62  :LPAR    (     at line 12
token 63  :ID      a     at line 12
token 64  :GEQ     >=    at line 12
token 65  :ID      b     at line 12
token 66  :RPAR    )     at line 12
token 67  :RETURN  return at line 13
token 68  :LPAR    (     at line 13
token 69  :SIGCHAR 'a' at line 13
token 70  :RPAR    )     at line 13
token 71  :SEMI    ;     at line 13
token 72  :ELSE    else  at line 14
token 73  :RETURN  return at line 15
token 74  :LPAR    (     at line 15
token 75  :SIGCHAR 'b' at line 15
token 76  :RPAR    )     at line 15
token 77  :SEMI    ;     at line 15
token 78  :RBRA    }     at line 16
token 79  :INT     int   at line 18
token 80  :ID      factorial at line 18
token 81  :LPAR    (     at line 18
token 82  :INT     int   at line 18
token 83  :ID      n     at line 18
token 84  :RPAR    )     at line 18
token 85  :LBRA    {     at line 18
token 86  :IF      if    at line 19
token 87  :LPAR    (     at line 19
token 88  :ID      n     at line 19
token 89  :EQEQ    ==    at line 19
token 90  :NUM     0     at line 19
token 91  :RPAR    )     at line 19
token 92  :RETURN  return at line 20
token 93  :LPAR    (     at line 20
token 94  :NUM     1     at line 20
token 95  :RPAR    )     at line 20
token 96  :SEMI    ;     at line 20
token 97  :ELSE    else  at line 21
token 98  :RETURN  return at line 22
token 99  :LPAR    (     at line 22
token 100 :ID      factorial at line 22
token 101 :LPAR    (     at line 22
token 102 :ID      n     at line 22
token 103 :MINUS   -     at line 22
token 104 :NUM     1     at line 22
token 105 :RPAR    )     at line 22
token 106 :RPAR    )     at line 22
token 107 :SEMI    ;     at line 22
token 108 :RBRA    }     at line 23
token 109 :INT     int   at line 25
token 110 :ID      test_while at line 25
token 111 :LBRA    {     at line 25
token 112 :INT     int   at line 26
token 113 :ID      n     at line 26
token 114 :EQU     =     at line 26
token 115 :NUM     3     at line 26
token 116 :SEMI    ;     at line 26
token 117 :DO      do    at line 27
token 118 :LBRA    {     at line 27
token 119 :ID      n     at line 28
token 120 :EQU     =     at line 28
token 121 :ID      n     at line 28
token 122 :MINUS   -     at line 28
token 123 :NUM     1     at line 28
token 124 :SEMI    ;     at line 28
token 125 :PRINTF  printf at line 29
token 126 :LPAR    (     at line 29
token 127 :ID      n     at line 29
token 128 :RPAR    )     at line 29
token 129 :SEMI    ;     at line 29
token 130 :RBRA    }     at line 30
token 131 :WHILE   while at line 30
token 132 :LPAR    (     at line 30
token 133 :ID      n     at line 30
token 134 :RPAR    )     at line 30
token 135 :RETURN  return at line 31
token 136 :LPAR    (     at line 31
token 137 :NUM     666   at line 31
token 138 :RPAR    )     at line 31
token 139 :SEMI    ;     at line 31
token 140 :RBRA    }     at line 32
token 141 :VOID    void  at line 34
token 142 :ID      test_switch_char at line 34
token 143 :LPAR    (     at line 34
token 144 :CHAR    char  at line 34
token 145 :ID      c     at line 34
token 146 :RPAR    )     at line 34
token 147 :LBRA    {     at line 34
token 148 :SWITCH  switch at line 35
token 149 :LPAR    (     at line 35
token 150 :ID      c     at line 35
token 151 :RPAR    )     at line 35
token 152 :LBRA    {     at line 35
token 153 :CASE    case  at line 36
token 154 :SIGCHAR 'a' at line 36
token 155 :COLON   :     at line 36
token 156 :LBRA    {     at line 36
token 157 :PRINTF  printf at line 37
token 158 :LPAR    (     at line 37
token 159 :STRING  "apple" at line 37
token 160 :RPAR    )     at line 37
token 161 :SEMI    ;     at line 37
token 162 :PRINTF  printf at line 38
token 163 :LPAR    (     at line 38
token 164 :STRING  "ali" at line 38
token 165 :RPAR    )     at line 38
token 166 :SEMI    ;     at line 38
token 167 :RBRA    }     at line 39
token 168 :CASE    case  at line 40
token 169 :SIGCHAR 'b' at line 40
token 170 :COLON   :     at line 40
token 171 :LBRA    {     at line 40
token 172 :PRINTF  printf at line 41
token 173 :LPAR    (     at line 41
token 174 :STRING  "boy" at line 41
token 175 :RPAR    )     at line 41
token 176 :SEMI    ;     at line 41
token 177 :RBRA    }     at line 42
token 178 :CASE    case  at line 43
token 179 :SIGCHAR 'c' at line 43
token 180 :COLON   :     at line 43
token 181 :LBRA    {     at line 43
token 182 :PRINTF  printf at line 44
token 183 :LPAR    (     at line 44
token 184 :STRING  "cat" at line 44
token 185 :RPAR    )     at line 44
token 186 :SEMI    ;     at line 44
token 187 :RBRA    }     at line 45
token 188 :DEFAULT default at line 46
token 189 :COLON   :     at line 46
token 190 :LBRA    {     at line 46
token 191 :PRINTF  printf at line 47
token 192 :LPAR    (     at line 47
token 193 :STRING  "dog" at line 47
token 194 :RPAR    )     at line 47
token 195 :SEMI    ;     at line 47
token 196 :RBRA    }     at line 48
token 197 :RBRA    }     at line 49
token 198 :RBRA    }     at line 50
token 199 :VOID    void  at line 52
token 200 :ID      test_switch_int at line 52
token 201 :LPAR    (     at line 52
token 202 :INT     int   at line 52
token 203 :ID      x     at line 52
token 204 :RPAR    )     at line 52
token 205 :LBRA    {     at line 52
token 206 :SWITCH  switch at line 53
token 207 :LPAR    (     at line 53
token 208 :ID      x     at line 53
token 209 :RPAR    )     at line 53
token 210 :LBRA    {     at line 53
token 211 :CASE    case  at line 54
token 212 :NUM     1     at line 54
token 213 :COLON   :     at line 54
token 214 :LBRA    {     at line 54
token 215 :PRINTF  printf at line 55
token 216 :LPAR    (     at line 55
token 217 :NUM     111   at line 55
token 218 :RPAR    )     at line 55
token 219 :SEMI    ;     at line 55
token 220 :RBRA    }     at line 56
token 221 :CASE    case  at line 57
token 222 :NUM     2     at line 57
token 223 :COLON   :     at line 57
token 224 :LBRA    {     at line 57
token 225 :PRINTF  printf at line 58
token 226 :LPAR    (     at line 58
token 227 :NUM     222   at line 58
token 228 :RPAR    )     at line 58
token 229 :SEMI    ;     at line 58
token 230 :RBRA    }     at line 59
token 231 :DEFAULT default at line 60
token 232 :COLON   :     at line 60
token 233 :LBRA    {     at line 60
token 234 :PRINTF  printf at line 61
token 235 :LPAR    (     at line 61
token 236 :NUM     333   at line 61
token 237 :RPAR    )     at line 61
token 238 :SEMI    ;     at line 61
token 239 :RBRA    }     at line 62
token 240 :RBRA    }     at line 63
token 241 :RBRA    }     at line 64
token 242 :VOID    void  at line 67
token 243 :ID      test_relation at line 67
token 244 :LPAR    (     at line 67
token 245 :INT     int   at line 67
token 246 :ID      n     at line 67
token 247 :RPAR    )     at line 67
token 248 :LBRA    {     at line 67
token 249 :IF      if    at line 68
token 250 :LPAR    (     at line 68
token 251 :ID      n     at line 68
token 252 :LSS     <     at line 68
token 253 :NUM     3     at line 68
token 254 :RPAR    )     at line 68
token 255 :PRINTF  printf at line 69
token 256 :LPAR    (     at line 69
token 257 :STRING  "<" at line 69
token 258 :RPAR    )     at line 69
token 259 :SEMI    ;     at line 69
token 260 :ELSE    else  at line 70
token 261 :SEMI    ;     at line 70
token 262 :IF      if    at line 72
token 263 :LPAR    (     at line 72
token 264 :ID      n     at line 72
token 265 :LEQ     <=    at line 72
token 266 :NUM     4     at line 72
token 267 :RPAR    )     at line 72
token 268 :PRINTF  printf at line 73
token 269 :LPAR    (     at line 73
token 270 :STRING  "<=" at line 73
token 271 :RPAR    )     at line 73
token 272 :SEMI    ;     at line 73
token 273 :ELSE    else  at line 74
token 274 :SEMI    ;     at line 74
token 275 :IF      if    at line 76
token 276 :LPAR    (     at line 76
token 277 :ID      n     at line 76
token 278 :GTR     >     at line 76
token 279 :NUM     5     at line 76
token 280 :RPAR    )     at line 76
token 281 :PRINTF  printf at line 77
token 282 :LPAR    (     at line 77
token 283 :STRING  ">" at line 77
token 284 :RPAR    )     at line 77
token 285 :SEMI    ;     at line 77
token 286 :ELSE    else  at line 78
token 287 :SEMI    ;     at line 78
token 288 :IF      if    at line 80
token 289 :LPAR    (     at line 80
token 290 :ID      n     at line 80
token 291 :GEQ     >=    at line 80
token 292 :NUM     6     at line 80
token 293 :RPAR    )     at line 80
token 294 :PRINTF  printf at line 81
token 295 :LPAR    (     at line 81
token 296 :STRING  ">=" at line 81
token 297 :RPAR    )     at line 81
token 298 :SEMI    ;     at line 81
token 299 :ELSE    else  at line 82
token 300 :SEMI    ;     at line 82
token 301 :IF      if    at line 84
token 302 :LPAR    (     at line 84
token 303 :ID      n     at line 84
token 304 :NEQ     !=    at line 84
token 305 :NUM     7     at line 84
token 306 :RPAR    )     at line 84
token 307 :PRINTF  printf at line 85
token 308 :LPAR    (     at line 85
token 309 :STRING  "!=" at line 85
token 310 :RPAR    )     at line 85
token 311 :SEMI    ;     at line 85
token 312 :ELSE    else  at line 86
token 313 :SEMI    ;     at line 86
token 314 :IF      if    at line 88
token 315 :LPAR    (     at line 88
token 316 :ID      n     at line 88
token 317 :EQEQ    ==    at line 88
token 318 :NUM     8     at line 88
token 319 :RPAR    )     at line 88
token 320 :PRINTF  printf at line 89
token 321 :LPAR    (     at line 89
token 322 :STRING  "==" at line 89
token 323 :RPAR    )     at line 89
token 324 :SEMI    ;     at line 89
token 325 :ELSE    else  at line 90
token 326 :SEMI    ;     at line 90
token 327 :RBRA    }     at line 91
token 328 :VOID    void  at line 95
token 329 :ID      test_print at line 95
token 330 :LBRA    {     at line 95
token 331 :PRINTF  printf at line 96
token 332 :LPAR    (     at line 96
token 333 :STRING  " !#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~" at line 96
token 334 :RPAR    )     at line 96
token 335 :SEMI    ;     at line 96
token 336 :PRINTF  printf at line 97
token 337 :LPAR    (     at line 97
token 338 :STRING  "The result is " at line 97
token 339 :COMMA   ,     at line 97
token 340 :NUM     1     at line 97
token 341 :RPAR    )     at line 97
token 342 :SEMI    ;     at line 97
token 343 :PRINTF  printf at line 98
token 344 :LPAR    (     at line 98
token 345 :NUM     2333333 at line 98
token 346 :RPAR    )     at line 98
token 347 :SEMI    ;     at line 98
token 348 :RBRA    }     at line 99
token 349 :VOID    void  at line 102
token 350 :MAIN    main  at line 102
token 351 :LPAR    (     at line 102
token 352 :RPAR    )     at line 102
token 353 :LBRA    {     at line 102
token 354 :CONST   const at line 103
token 355 :INT     int   at line 103
token 356 :ID      con_int_3 at line 103
token 357 :EQU     =     at line 103
token 358 :NUM     003   at line 103
token 359 :COMMA   ,     at line 103
token 360 :ID      con_int_4 at line 103
token 361 :EQU     =     at line 103
token 362 :PLUS    +     at line 103
token 363 :NUM     44    at line 103
token 364 :COMMA   ,     at line 103
token 365 :ID      con_int_5 at line 103
token 366 :EQU     =     at line 103
token 367 :MINUS   -     at line 103
token 368 :NUM     555   at line 103
token 369 :SEMI    ;     at line 103
token 370 :INT     int   at line 105
token 371 :ID      var_int_res at line 105
token 372 :SEMI    ;     at line 105
token 373 :CHAR    char  at line 106
token 374 :ID      var_char_res at line 106
token 375 :SEMI    ;     at line 106
token 376 :INT     int   at line 107
token 377 :ID      var_int_3 at line 107
token 378 :COMMA   ,     at line 107
token 379 :ID      var_int_4 at line 107
token 380 :SEMI    ;     at line 107
token 381 :INT     int   at line 108
token 382 :ID      op    at line 108
token 383 :SEMI    ;     at line 108
token 384 :ID      scanf at line 110
token 385 :LPAR    (     at line 110
token 386 :ID      op    at line 110
token 387 :COMMA   ,     at line 110
token 388 :ID      var_int_1 at line 110
token 389 :COMMA   ,     at line 110
token 390 :ID      var_int_2 at line 110
token 391 :COMMA   ,     at line 110
token 392 :ID      var_int_3 at line 110
token 393 :COMMA   ,     at line 110
token 394 :ID      var_int_4 at line 110
token 395 :RPAR    )     at line 110
token 396 :SEMI    ;     at line 110
token 397 :ID      scanf at line 111
token 398 :LPAR    (     at line 111
token 399 :ID      var_char_1 at line 111
token 400 :RPAR    )     at line 111
token 401 :SEMI    ;     at line 111
token 402 :IF      if    at line 113
token 403 :LPAR    (     at line 113
token 404 :ID      op    at line 113
token 405 :EQEQ    ==    at line 113
token 406 :NUM     0     at line 113
token 407 :RPAR    )     at line 113
token 408 :LBRA    {     at line 113
token 409 :PRINTF  printf at line 114
token 410 :LPAR    (     at line 114
token 411 :STRING  "test_if" at line 114
token 412 :RPAR    )     at line 114
token 413 :SEMI    ;     at line 114
token 414 :ID      var_char_res at line 115
token 415 :EQU     =     at line 115
token 416 :ID      test_if at line 115
token 417 :LPAR    (     at line 115
token 418 :ID      var_int_1 at line 115
token 419 :COMMA   ,     at line 115
token 420 :ID      var_int_2 at line 115
token 421 :RPAR    )     at line 115
token 422 :SEMI    ;     at line 115
token 423 :PRINTF  printf at line 116
token 424 :LPAR    (     at line 116
token 425 :ID      var_char_res at line 116
token 426 :RPAR    )     at line 116
token 427 :SEMI    ;     at line 116
token 428 :PRINTF  printf at line 118
token 429 :LPAR    (     at line 118
token 430 :STRING  "factorial" at line 118
token 431 :RPAR    )     at line 118
token 432 :SEMI    ;     at line 118
token 433 :ID      var_int_res at line 119
token 434 :EQU     =     at line 119
token 435 :ID      factorial at line 119
token 436 :LPAR    (     at line 119
token 437 :ID      var_int_3 at line 119
token 438 :RPAR    )     at line 119
token 439 :SEMI    ;     at line 119
token 440 :PRINTF  printf at line 120
token 441 :LPAR    (     at line 120
token 442 :ID      var_int_res at line 120
token 443 :RPAR    )     at line 120
token 444 :SEMI    ;     at line 120
token 445 :PRINTF  printf at line 122
token 446 :LPAR    (     at line 122
token 447 :STRING  "test_while" at line 122
token 448 :RPAR    )     at line 122
token 449 :SEMI    ;     at line 122
token 450 :ID      var_int_res at line 123
token 451 :EQU     =     at line 123
token 452 :ID      test_while at line 123
token 453 :SEMI    ;     at line 123
token 454 :PRINTF  printf at line 124
token 455 :LPAR    (     at line 124
token 456 :ID      var_int_res at line 124
token 457 :RPAR    )     at line 124
token 458 :SEMI    ;     at line 124
token 459 :PRINTF  printf at line 126
token 460 :LPAR    (     at line 126
token 461 :STRING  "test_print" at line 126
token 462 :RPAR    )     at line 126
token 463 :SEMI    ;     at line 126
token 464 :ID      test_print at line 127
token 465 :SEMI    ;     at line 127
token 466 :PRINTF  printf at line 129
token 467 :LPAR    (     at line 129
token 468 :STRING  "var_int_res" at line 129
token 469 :RPAR    )     at line 129
token 470 :SEMI    ;     at line 129
token 471 :ID      var_int_res at line 130
token 472 :EQU     =     at line 130
token 473 :MINUS   -     at line 130
token 474 :ID      var_int_1 at line 130
token 475 :MINUS   -     at line 130
token 476 :ID      var_int_array_1 at line 130
token 477 :LBRK    [     at line 130
token 478 :NUM     0     at line 130
token 479 :RBRK    ]     at line 130
token 480 :PLUS    +     at line 130
token 481 :PLUS    +     at line 130
token 482 :NUM     5     at line 130
token 483 :PLUS    +     at line 130
token 484 :SIGCHAR 'a' at line 130
token 485 :PLUS    +     at line 130
token 486 :ID      factorial at line 130
token 487 :LPAR    (     at line 130
token 488 :ID      var_int_3 at line 130
token 489 :RPAR    )     at line 130
token 490 :PLUS    +     at line 130
token 491 :MINUS   -     at line 130
token 492 :NUM     1     at line 130
token 493 :MULT    *     at line 130
token 494 :LPAR    (     at line 130
token 495 :NUM     2     at line 130
token 496 :PLUS    +     at line 130
token 497 :NUM     1     at line 130
token 498 :RPAR    )     at line 130
token 499 :SEMI    ;     at line 130
token 500 :PRINTF  printf at line 131
token 501 :LPAR    (     at line 131
token 502 :ID      var_int_res at line 131
token 503 :RPAR    )     at line 131
token 504 :SEMI    ;     at line 131
token 505 :PRINTF  printf at line 133
token 506 :LPAR    (     at line 133
token 507 :STRING  "var_int_res[]" at line 133
token 508 :RPAR    )     at line 133
token 509 :SEMI    ;     at line 133
token 510 :ID      var_int_array_1 at line 134
token 511 :LBRK    [     at line 134
token 512 :NUM     0     at line 134
token 513 :RBRK    ]     at line 134
token 514 :EQU     =     at line 134
token 515 :ID      var_int_res at line 134
token 516 :DIV     /     at line 134
token 517 :NUM     1     at line 134
token 518 :PLUS    +     at line 134
token 519 :NUM     1     at line 134
token 520 :SEMI    ;     at line 134
token 521 :PRINTF  printf at line 135
token 522 :LPAR    (     at line 135
token 523 :ID      var_int_array_1 at line 135
token 524 :LBRK    [     at line 135
token 525 :NUM     0     at line 135
token 526 :RBRK    ]     at line 135
token 527 :RPAR    )     at line 135
token 528 :SEMI    ;     at line 135
token 529 :RBRA    }     at line 136
token 530 :ELSE    else  at line 137
token 531 :LBRA    {     at line 137
token 532 :PRINTF  printf at line 138
token 533 :LPAR    (     at line 138
token 534 :STRING  "test_relation" at line 138
token 535 :RPAR    )     at line 138
token 536 :SEMI    ;     at line 138
token 537 :ID      test_relation at line 139
token 538 :LPAR    (     at line 139
token 539 :ID      var_int_4 at line 139
token 540 :RPAR    )     at line 139
token 541 :SEMI    ;     at line 139
token 542 :PRINTF  printf at line 141
token 543 :LPAR    (     at line 141
token 544 :STRING  "test_switch_int" at line 141
token 545 :RPAR    )     at line 141
token 546 :SEMI    ;     at line 141
token 547 :ID      test_switch_int at line 142
token 548 :LPAR    (     at line 142
token 549 :ID      var_int_1 at line 142
token 550 :RPAR    )     at line 142
token 551 :SEMI    ;     at line 142
token 552 :PRINTF  printf at line 144
token 553 :LPAR    (     at line 144
token 554 :STRING  "test_switch_char" at line 144
token 555 :RPAR    )     at line 144
token 556 :SEMI    ;     at line 144
token 557 :ID      test_switch_char at line 145
token 558 :LPAR    (     at line 145
token 559 :ID      var_char_1 at line 145
token 560 :RPAR    )     at line 145
token 561 :SEMI    ;     at line 145
token 562 :RBRA    }     at line 146
token 563 :RETURN  return at line 147
token 564 :SEMI    ;     at line 147
token 565 :RBRA    }     at line 148
ERROR#1   :Invalid symbol @ at line 150
token 566 :STRING  "sdfsf" at line 151
token 567 :ID      fdsaflj at line 151
ERROR#2   :Missing double quotes "233 at line 151
token 568 :NUM     123   at line 152
ERROR#3   :Invalid symbol ! at line 153
token 569 :ID      abc   at line 153
ERROR#4   :Missing single quotes 'a at line 154
token 570 :ID      bc    at line 154
ERROR#5   :Missing single quotes '1 at line 154
token 571 :NUM     23    at line 154
ERROR#6   :Illegal character type in single quotes '@' at line 155
token 572 :NUM     2333  at line 155
